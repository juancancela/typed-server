{"version":3,"sources":["webpack:///webpack/bootstrap 5d5e66bda707ac4da364","webpack:///./src/start.ts","webpack:///./src/lib/application/Application.ts","webpack:///external \"express\"","webpack:///external \"morgan\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"http\"","webpack:///./src/lib/router/RouterFactory.ts","webpack:///./src/lib/constant/Method.ts","webpack:///./src/service/ProfileService.ts","webpack:///./src/resource/Profile.ts","webpack:///./src/lib/resource/Resource.ts","webpack:///./src/lib/error/AppLogEntry.ts","webpack:///./src/lib/error/AppLogType.ts","webpack:///./src/lib/utils/utils.ts","webpack:///./src/resource/common/PersonalInfo.ts","webpack:///./src/lib/db/postgre/PostgreRepository.ts","webpack:///./src/lib/db/postgre/PostgreCriteria.ts","webpack:///./src/lib/resource/QueryTuple.ts","webpack:///./src/lib/utils/utils.db.ts","webpack:///./src/lib/resource/QueryTupleOperation.ts","webpack:///./src/lib/db/postgre/utils.postgre.ts","webpack:///./src/lib/utils/utils.props.ts","webpack:///./config/config.local.ts","webpack:///./config/config.dev.ts","webpack:///./config/config.prod.ts","webpack:///external \"pg\"","webpack:///./src/lib/annotation/route.ts","webpack:///./src/service/MessageService.ts","webpack:///./src/resource/Message.ts","webpack:///./src/lib/resource/EmbeddedResource.ts","webpack:///./src/resource/common/MessageSocialInfo.ts","webpack:///./webpack.config.js","webpack:///external \"app-root-path\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d5e66bda707ac4da364","import Application from './lib/application/Application'\nimport ProfileService from './service/ProfileService'\nimport MessageService from './service/MessageService'\nconst port = process.env.APP_PORT\nconst apiVersion = 2\nconst host = 'http://myApiHost.com/'\n\nnew Application(\n    [new ProfileService(), new MessageService()],\n    port,\n    apiVersion,\n    host\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/start.ts","import * as express from 'express';\nimport * as path from 'path';\nimport * as logger from 'morgan';\nimport * as bodyParser from 'body-parser';\nimport * as root from 'app-root-path';\nimport * as cookieParser from 'cookie-parser';\nimport * as http from 'http';\nimport RouterFactory from '../router/RouterFactory'\nimport Repository from '../repository/Repository'\nimport Resource from '../resource/Resource'\nvar _services = {}\nconst app = express()\n\n/**\n * Application\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class Application {\n\n    public static DEFAULT_PORT = 3000\n    public static DEFAULT_PAGE = 1\n    public static DEFAULT_PAGE_SIZE = 50\n    static API_VERSION\n    static HOST\n    services: any[]\n\n    constructor(services: any[], port?: number, version?:number, host?:string) {\n        version ? Application.API_VERSION = version : 'v1'\n        host ? Application.HOST = host : ''\n        \n        app.use(logger('dev'));\n        app.use(bodyParser.json());\n        app.use(bodyParser.urlencoded({ extended: false }));\n        app.use(cookieParser());\n        \n        app.use(this.injectPaginationParams)\n        \n        app.use(RouterFactory.getRouter());\n        app.set('port', port || Application.DEFAULT_PORT);\n\n        const server = http.createServer(app);\n        server.listen(port || Application.DEFAULT_PORT);\n\n        server.on('listening', () => {\n            const addr = server.address();\n            const bind = (typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`);\n        });\n        \n        services.forEach((service) => {\n            _services[service.getName()] = service\n        })\n    }\n\n    injectPaginationParams(req, res, next) {\n        !req.query['page_size'] ? req.query['page_size'] = Application.DEFAULT_PAGE_SIZE : ''\n        !req.query['page'] ? req.query['page'] = Application.DEFAULT_PAGE : ''\n        return next()\n    }\n\n    public static getServiceByName(name:string){\n        return _services[name]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/application/Application.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 7\n// module chunks = 0","import * as express from 'express'\nimport Method from '../constant/Method'\nconst router = express.Router()\n\n/**\n * Router Factory\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class RouterFactory {\n\n    public static create(method: Method, urls: string[] | string, handler: any) {\n        switch (method) {\n            case Method.GET:\n                router.get(urls, handler);\n                break;\n            case Method.POST:\n                router.post(urls, handler);\n                break\n            case Method.PUT:\n                router.put(urls, handler);\n                break\n            case Method.DELETE:\n                router.delete(urls, handler);\n                break\n        }\n    }\n\n    public static getRouter(): express.Router {\n        return router;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/router/RouterFactory.ts","export enum Method {\n    GET,\n    PUT,\n    POST,\n    DELETE,\n    OPTIONS,\n    PATCH\n}\n\nexport default Method\n\n\n// WEBPACK FOOTER //\n// ./src/lib/constant/Method.ts","import Profile from '../resource/Profile'\nimport PostgreRepository from '../lib/db/postgre/PostgreRepository'\nimport Method from '../lib/constant/Method'\nimport route from '../lib/annotation/route'\nvar __this;\n\nexport default class ProfileService extends PostgreRepository<Profile> {\n    constructor() {\n        super(Profile.RESOURCE_NAME);\n        __this = this;\n    }\n\n    @route(Method.GET, '/profile/:id')\n    async getProfile(req, res, next) {\n        try {\n            let result = await __this.getById(req.params.id)\n            result = await result.toHAL()\n            res.send(result)\n        } catch (err) {\n            res.send(err)\n        }\n    }\n\n    transform(obj: any): Profile {\n        return Profile.transform(obj);\n    }\n\n    static transform(obj: any): Profile {\n        return Profile.transform(obj);\n    }\n\n    validate(obj: any) {\n        Profile.validate(obj);\n    }\n\n    static validate(obj: any) {\n        Profile.validate(obj);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/ProfileService.ts","import Resource from '../lib/resource/Resource'\nimport EmbeddedResource from '../lib/resource/EmbeddedResource'\nimport PersonalInfo from './common/PersonalInfo'\nimport AppLogEntry from '../lib/error/AppLogEntry'\nimport AppLogType from '../lib/error/AppLogType'\n\nexport default class Profile extends Resource<Profile> {\n\n    public static RESOURCE_NAME: string = 'profile';\n    private personalInfo: PersonalInfo;\n\n    /**\n     * constructor\n     * @param personalInfo personal information of the profile\n     */\n    constructor(personalInfo: PersonalInfo, id?: string) {\n        super(Profile.RESOURCE_NAME, id);\n        this.validate({ personalInfo, id });\n        this.personalInfo = personalInfo;\n    }\n\n    transform(obj: any): Profile {\n        return Profile.transform(obj)\n    }\n\n    static transform(obj: any): Profile {\n        return new Profile(PersonalInfo.transform(obj), obj.id)\n    }\n\n    static validate(obj: any) {\n        return Profile.validate(obj)\n    }\n\n    /**\n     * Validates whether or not supplied object contains valid parameters to contruct a Profile instance\n     * @param obj object to be validated\n     */\n    validate(obj: any) {\n        try {\n            PersonalInfo.validate(obj.personalInfo)\n        } catch (err) {\n            throw new AppLogEntry(AppLogType.ERROR, `Error transforming Profile instance: Provided input: ${obj}`, err)\n        }\n    }\n\n    embeddeds(): EmbeddedResource[] {\n        return []\n    }\n\n    /**\n     * Given the name of a property, returns its database type\n     * @param propertyName the name of the property to which type will be resolved \n     */\n    static getPropertyType(propertyName: string): string {\n        if(propertyName.startsWith('personalInfo')){\n            propertyName = propertyName.split('.')[0]\n            return PersonalInfo.getPropertyType(propertyName)\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/Profile.ts","import AppLogEntry from '../error/AppLogEntry'\nimport AppLogType from '../error/AppLogType'\nimport EmbeddedResource from './EmbeddedResource'\nimport Transformable from '../repository/Transformable'\nimport Application from '../application/Application'\nimport { removeDuplicatedSlashes } from '../utils/utils'\n\nabstract class Resource<T> implements Transformable<T>{\n\n    /**\n     * Id of the resource\n     */\n    id: string;\n\n    /**\n     * Name of the resource. In example: Profile\n     */\n    name: string;\n\n    constructor(name: string, id?: string) {\n        this.id = id;\n        this.name = name;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getId() {\n        return this.id;\n    }\n\n    async toHAL(isRoot?: boolean) {\n        let __this = this;\n        if (!__this.id) {\n            throw new AppLogEntry(AppLogType.ERROR, `A resource must contain an ID to be represented`);\n        }\n\n        let hal = {\n            _links: {},\n            _embedded: {}\n        };\n\n        Object.keys(__this).forEach((key) => {\n            hal[key] = __this[key]\n        });\n\n        hal._links = {\n            self: removeDuplicatedSlashes(`${Application.HOST}/${Application.API_VERSION}/${__this.name}/${__this.id}`)\n        };\n\n        for (var i = 0; i < __this.embeddeds().length; i++) {\n            let embeddedResource = __this.embeddeds()[i]\n            let service = Application.getServiceByName(embeddedResource.getResourceName())\n            let res = await service.search(embeddedResource.getCriteria())\n            hal._embedded[embeddedResource.getName()] = res\n        }\n\n        return hal\n    }\n\n    abstract transform(obj: any): T\n\n    abstract validate(obj: any)\n\n    abstract embeddeds(): EmbeddedResource[]\n\n}\n\nexport default Resource\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/Resource.ts","import AppLogType from './AppLogType'\n\nexport default class AppLogEntry {\n    type: AppLogType;\n    date: string;\n    description: string;\n    stack: string;\n\n    constructor(type:AppLogType, description:string, stack?:string){\n        this.type = type;\n        this.date = new Date().toISOString();\n        this.description = description;\n        this.stack = stack;\n    }\n\n    getLogType(id:AppLogType){\n        switch(id){\n            case AppLogType.DEBUG: return 'DEBUG';\n            case AppLogType.ERROR: return 'ERROR';\n            case AppLogType.INFO: return 'INFO';\n            case AppLogType.WARNING: return 'WARNING';\n        }\n    }\n\n    toJSON(){\n        return {\n            type: this.getLogType(this.type),\n            date: this.date,\n            description: this.description,\n            stack: `${this.stack ? this.stack : 'N/A'}`\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/error/AppLogEntry.ts","enum AppLogType {\n    DEBUG,\n    INFO,\n    WARNING,\n    ERROR\n}\nexport default AppLogType;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/error/AppLogType.ts","/**\n * Given an url as an string, removes duplicated slashes from it. \n * Example:\n * http://www.google.com// -> http://www.google.com/\n * @param url url to which duplicated slashes will be removed from\n */\nexport function removeDuplicatedSlashes(url: string) {\n    return url.replace(/([^:]\\/)\\/+/g, \"$1\");\n}\n\n/**\n * Injects named parameters as query params\n * @param req HTTP request\n * \n * //TODO this is not optimal at all. I need to somehow implement a decorator that executes\n * //each and every time before a @route annotated method.\n */\nexport function injectIdParams(req) {\n    Object.keys(req.params).forEach((paramName) => {\n        if (req.params[paramName]) req.query[paramName] = req.params[paramName]\n    })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.ts","import Transformable from '../../lib/repository/Transformable'\n\nexport default class PersonalInfo implements Transformable<PersonalInfo>{\n    \n    private name: string;\n    private lastName: string;\n    private email: string;\n    private age: number;\n    private bio: string;\n    private photo: string;\n\n    /**\n     * constructor\n     * @param name name of the person \n     * @param lastName last name of the person\n     * @param email email of the person\n     * @param age age of the person\n     * @param bio biography/description of the person\n     * @param photo photo of the person\n     */\n    constructor(name: string, lastName: string, email: string, age: number, bio: string, photo: string) {\n        this.validate({name, lastName, email, age, bio, photo});\n        this.name = name;\n        this.lastName = lastName;\n        this.email = email;\n        this.age = age;\n        this.bio = bio;\n        this.photo = photo;\n    }\n\n    transform(obj:any): PersonalInfo {\n        return PersonalInfo.transform(obj)\n    }\n\n    static transform(obj: any): PersonalInfo {\n        return new PersonalInfo(obj.name, obj.lastName, obj.email, obj.age, obj.bio, obj.avatar)\n    }\n\n    validate(obj:any) {\n        return PersonalInfo.validate(obj) \n    }\n\n    static validate(obj:any) {\n        return\n    }\n\n    static getPropertyType(propertyName: string): string {\n        switch(propertyName.toLowerCase()) {\n            case 'name': return 'string'\n            case 'lastname': return 'string'\n            case 'email': return 'string'\n            case 'age': return 'int'\n            case 'bio': return 'string'\n            case 'photo': return 'string'\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/common/PersonalInfo.ts","import Resource from '../../resource/Resource'\nimport PostgreCriteria from './PostgreCriteria'\nimport Repository from '../../repository/Repository'\nimport AppLogEntry from '../../error/AppLogEntry'\nimport AppLogType from '../../error/AppLogType'\nconst pool = require('./utils.postgre')\n\n/**\n * PostgreSql Repository\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nabstract class PostgreRepository<T extends Resource<T>> implements Repository<T> {\n\n    name: string;\n\n    constructor(name) {\n        this.name = name\n    }\n\n    getName(): string {\n        return this.name\n    }\n\n    async searchByRequest(request:any, mapper:any): Promise<T[]> {\n        let criteria = PostgreCriteria.create(request, mapper)\n        let res = await this.search(criteria)\n        return res\n    }\n\n    async search(criteria: PostgreCriteria): Promise<T[]> {\n       let __this = this\n       let resolvedCriteria\n       try {\n            resolvedCriteria = criteria.resolve(this.getName())\n            let res = await pool.query(resolvedCriteria.statement, resolvedCriteria.values)\n            if (res.rows.length === 0) {\n                throw new AppLogEntry(AppLogType.INFO, `Does not exist any ${this.getName()}`)\n            } else {\n                let _res = []\n                let rows = res['rows']\n                rows.forEach((row) => {\n                    _res.push(__this.transform(row))\n                })\n                return _res\n            }\n        } catch (err) {\n            throw new AppLogEntry(AppLogType.ERROR, `Failed to execute PostgreRepository.search(${JSON.stringify(resolvedCriteria)})`)\n        } \n    }\n\n    create(instance: T): T {\n        throw new Error('Method not implemented.');\n    }\n\n    update(id: string, updatedInstance: T): T {\n        throw new Error('Method not implemented.');\n    }\n\n    delete(id: string): T {\n        throw new Error('Method not implemented.');\n    }\n\n    abstract transform(obj: any): T\n\n    abstract validate(obj: any)\n}\n\nexport default PostgreRepository\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/PostgreRepository.ts","import Criteria from '../../criteria/Criteria'\nimport AppLogEntry from '../../error/AppLogEntry'\nimport AppLogType from '../../error/AppLogType'\nimport Transformable from '../../repository/Transformable'\nimport QueryTuple from '../../resource/QueryTuple'\nimport QueryTupleOperation from '../../resource/QueryTupleOperation'\nimport { resolveOperation } from '../../utils/utils.db'\nimport { resolveTupleOperation } from './utils.postgre'\n\nexport default class PostgreCriteria implements Criteria {\n\n    tuples: QueryTuple[]\n\n    constructor(tuples: QueryTuple[]) {\n        this.tuples = tuples\n    }\n\n    getTuples(): QueryTuple[] {\n        return this.tuples\n    }\n\n    resolve(tableName?: string): { statement: string, values: any } {\n        let __this = this\n        let statement = `SELECT * FROM ${tableName}`\n        let whereStatement = ``\n        let paginationStatement = ``\n        let page\n        let pageSize\n        let values = []\n        let fieldPosition = 0\n\n        __this.tuples.forEach((tuple, idx) => {\n            fieldPosition++\n            switch (tuple.fieldName) {\n                case 'page':\n                case 'page_size':\n                    if (tuple.fieldName === 'page_size') {\n                        pageSize = tuple.fieldValue\n                        paginationStatement += `LIMIT $${fieldPosition} `\n                        values.push(pageSize)\n                    }\n                    if (tuple.fieldName === 'page') {\n                        paginationStatement += `OFFSET $${fieldPosition} `\n                        values.push((tuple.fieldValue - 1) * pageSize)\n                    }\n                    break\n\n                default:\n                    values.push(tuple.fieldValue)\n                    whereStatement += `${tuple.fieldName}::${tuple.fieldType}${resolveTupleOperation(tuple.operation)}$${fieldPosition}`\n                    whereStatement += ` AND `\n                    break\n            }\n        })\n\n\n        whereStatement = whereStatement.substring(0, whereStatement.length - ` AND `.length)\n        whereStatement ? statement += ` WHERE ${whereStatement}` : ''\n        paginationStatement ? statement += ` ${paginationStatement} ` : ''\n        statement = statement.toUpperCase()\n\n        return { statement, values }\n    }\n\n    create(request: any, mapper: any) {\n        return PostgreCriteria.create(request, mapper)\n    }\n\n    static create(request: any, mapper: any) {\n        let tuples = []\n\n        Object.keys(request.query).forEach((key) => {\n            tuples.push(new QueryTuple(key, request.query[key], mapper(key), resolveOperation(key)))\n        })\n\n        return new PostgreCriteria(tuples)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/PostgreCriteria.ts","import AppLogEntry from '../error/AppLogEntry'\nimport AppLogType from '../error/AppLogType'\nimport Transformable from '../repository/Transformable'\nimport QueryTupleOperation from './QueryTupleOperation'\n\nexport default class QueryTuple {\n\n\n    fieldName: string\n    fieldValue: string | string[] | number | number[] | any\n    fieldType: string\n    operation: QueryTupleOperation\n\n    constructor(fieldName: string, fieldValue: string | string[] | number | number[] | any, fieldType: string, operation: QueryTupleOperation) {\n        this.fieldName = fieldName\n        this.fieldValue = fieldValue\n        this.fieldType = fieldType\n        this.operation = operation\n    }\n\n    getFieldName(): string {\n        return this.fieldName\n    }\n\n    getFieldValue(): string | string[] | number | number[] | any {\n        return this.fieldValue\n    }\n\n    getFieldType(): string {\n        return this.fieldType\n    }\n\n    getOperation(): QueryTupleOperation {\n        return this.operation\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/QueryTuple.ts","import QueryTupleOperation from '../resource/QueryTupleOperation'\n\nexport function resolveOperation(key) {\n  let _containsPrefix = (key) => {\n    return !key || key[2] != '_' || key.length < 3\n  }\n\n  if (!_containsPrefix(key)) return QueryTupleOperation.EQUALS\n\n  let opPrefix = key.substring(0, 3).toLowerCase()\n\n  switch (opPrefix) {\n    case 'eq': return QueryTupleOperation.EQUALS\n    case 'gt': return QueryTupleOperation.GREATER_THAN\n    case 'lt': return QueryTupleOperation.LESSER_THAN\n    case 'ct': return QueryTupleOperation.CONTAINS\n    default: return QueryTupleOperation.EQUALS\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.db.ts","export enum QueryTupleOperation {\n    EQUALS,\n    GREATER_THAN,\n    LESSER_THAN,\n    CONTAINS\n}\n\nexport default QueryTupleOperation\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/QueryTupleOperation.ts","import QueryTupleOperation from '../../resource/QueryTupleOperation'\n\nconst props = require('../../utils/utils.props');\nconst pg = require('pg')\nconst pool = new pg.Pool(props().postgresql);\n\nexport function resolveTupleOperation(op: QueryTupleOperation) {\n  switch (op) {\n    //TODO Do the resolution for contains! :)\n    case QueryTupleOperation.CONTAINS: return ''\n    case QueryTupleOperation.EQUALS: return '='\n    case QueryTupleOperation.GREATER_THAN: return '>'\n    case QueryTupleOperation.LESSER_THAN: return '<'\n  }\n}\n\npool.on('error', (err, client) => {\n  console.error('idle client error', err.message, err.stack);\n});\n\nmodule.exports.query = (text, values, callback) => {\n  return pool.query(text, values, callback);\n};\n\nmodule.exports.connect = (callback) => {\n  return pool.connect(callback);\n};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/utils.postgre.ts","const local = require('../../../config/config.local');\nconst dev = require('../../../config/config.dev');\nconst prod = require('../../../config/config.prod');\n\nfunction properties() {\n    switch (process.env.APP_ENV) {\n        case 'local': return local.default;\n        case 'dev'  : return dev.default;\n        case 'prod' : return prod.default;\n        default     : return local.default;\n    }\n}\n\nexport = properties\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.props.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./config/config.local.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./config/config.dev.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./config/config.prod.ts","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 27\n// module chunks = 0","import RouterFactory from '../router/RouterFactory'\nimport Method from '../constant/Method'\n\nexport default function route(verb:Method, urls:string[] | string) {\n    return function (target, propertyKey: string, descriptor: PropertyDescriptor) {\n        RouterFactory.create(verb, urls, target[propertyKey]);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/annotation/route.ts","import Message from '../resource/Message'\nimport PostgreRepository from '../lib/db/postgre/PostgreRepository'\nimport PostgresCriteria from '../lib/db/postgre/PostgreCriteria'\nimport Method from '../lib/constant/Method'\nimport route from '../lib/annotation/route'\nimport { injectIdParams } from '../lib/utils/utils'\nvar __this;\n\nexport default class MessageService extends PostgreRepository<Message> {\n\n    constructor() {\n        super(Message.RESOURCE_NAME)\n        __this = this\n    }\n\n    @route(Method.GET, ['/profile/:profileId/message', '/profile/:profileId/message/:id'])\n    async searchForMessages(req, res, next) {\n        injectIdParams(req)\n        try {\n            let result = await __this.searchByRequest(req, Message.getPropertyType)\n            if (req.params.id) {\n                let r = await result[0].toHAL()\n                res.send(r)\n            } else {\n                //TODO the response is actually not a HAL collection based on standard; just an Array\n                let halResult = []\n                for(var i = 0; i < result.length; i++){\n                    let r = await result[i].toHAL()\n                    halResult.push(r)\n                }\n                res.send(halResult)\n            }\n        } catch (err) {\n            res.send(err)\n        }\n    }\n\n    transform(obj: any): Message {\n        return Message.transform(obj)\n    }\n\n    /**\n     * Transforms the result from a repository to a typed Resource instance\n     * @param obj A non typed, raw from DB profile \n     */\n    static transform(obj: any): Message {\n        return Message.transform(obj)\n    }\n\n    validate(obj: any) {\n        Message.validate(obj)\n    }\n\n    static validate(obj: any) {\n        Message.validate(obj)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/MessageService.ts","import Resource from '../lib/resource/Resource'\nimport EmbeddedResource from '../lib/resource/EmbeddedResource'\nimport PostgreCriteria from '../lib/db/postgre/PostgreCriteria'\nimport MessageSocialInfo from './common/MessageSocialInfo'\nimport QueryTuple from '../lib/resource/QueryTuple'\nimport QueryTupleOperation from '../lib/resource/QueryTupleOperation'\nimport Profile from './Profile'\n\nexport default class Message extends Resource<Message> {\n\n    public static RESOURCE_NAME: string = 'message';\n\n    private value: string;\n    private date: number;\n    private profileId: number;\n    private messageSocialInfo: MessageSocialInfo;\n\n    /**\n     * constructor\n     * @param value \n     * @param date \n     * @param messageSocialInfo\n     * @param profileId\n     * @param id \n     */\n    constructor(value: string, date: number, messageSocialInfo: MessageSocialInfo, profileId: number, id?: string) {\n        super(Message.RESOURCE_NAME, id)\n        this.validate({ value, date, messageSocialInfo, profileId, id })\n        this.value = value\n        this.date = date\n        this.messageSocialInfo = messageSocialInfo\n        this.profileId = profileId\n    }\n\n    /**\n     * Define the list of embedded resources of the resource\n     */\n    embeddeds(): EmbeddedResource[] {\n        return [\n            new EmbeddedResource(\n                'profile',\n                Profile.RESOURCE_NAME,\n                new PostgreCriteria([new QueryTuple('id', this.profileId, 'bigint', QueryTupleOperation.EQUALS)]))\n        ]\n    }\n\n    transform(obj: any): Message {\n        return Message.transform(obj)\n    }\n\n    static transform(obj: any): Message {\n        return new Message(obj.value, obj.date, MessageSocialInfo.transform(obj), obj.profileid, obj.id)\n    }\n\n    validate(obj: any) {\n        return Message.validate(obj)\n    }\n\n    static validate(obj: any) {\n        return\n    }\n\n    /**\n     * Given the name of a property, returns its database type\n     * @param propertyName the name of the property to which type will be resolved \n     */\n    static getPropertyType(propertyName: string): string {\n        if(propertyName.startsWith('messageSocialInfo')){\n            propertyName = propertyName.split('.')[0]\n            return MessageSocialInfo.getPropertyType(propertyName)\n        } \n\n        switch(propertyName.toLocaleLowerCase()) {\n            case 'id': return 'bigint'\n            case 'date': return 'bigint'\n            case 'profileid': return 'bigint'\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/Message.ts","import Criteria from '../criteria/Criteria'\n\nexport default class EmbeddedResource {\n\n    name: string\n    resourceName: string\n    criteria: Criteria\n\n    constructor(name, resourceName, criteria) {\n        this.name = name\n        this.resourceName = resourceName\n        this.criteria = criteria\n    }\n\n    getName(): string {\n        return this.name\n    }\n\n    getCriteria(): Criteria {\n        return this.criteria\n    }\n\n    getResourceName(): string {\n        return this.resourceName\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/EmbeddedResource.ts","import Resource from '../../lib/resource/Resource'\nimport Transformable from '../../lib/repository/Transformable'\n\nexport default class MessageSocialInfo implements Transformable<MessageSocialInfo> {\n\n    private likeCounter: number;\n    private loveCounter: number;\n    private funCounter: number;\n    private wowCounter: number;\n    private sadCounter: number;\n    private angryCounter: number;\n    private reportCounter: number;\n\n\n    /**\n     * constructor\n     * @param likeCounter # of times message has been marked as like\n     * @param loveCounter # of times message has been marked as love\n     * @param funCounter # of times message has been marked as fun\n     * @param wowCounter # of times message has been marked as wow\n     * @param sadCounter # of times message has been marked as sad\n     * @param angryCounter # of times message has been marked as angry\n     * @param reportCounter # of times message has been reported\n     */\n    constructor(likeCounter: number, loveCounter: number, funCounter: number, wowCounter: number, sadCounter: number, angryCounter: number, reportCounter: number) {\n        this.validate({ likeCounter, loveCounter, funCounter, wowCounter, sadCounter, angryCounter, reportCounter })\n        this.likeCounter = likeCounter;\n        this.loveCounter = loveCounter;\n        this.funCounter = funCounter;\n        this.wowCounter = wowCounter;\n        this.sadCounter = sadCounter;\n        this.angryCounter = angryCounter;\n        this.reportCounter = reportCounter;\n    }\n\n    transform(obj: any): MessageSocialInfo {\n        return MessageSocialInfo.transform(obj)\n    }\n\n    static transform(obj: any): MessageSocialInfo {\n        return new MessageSocialInfo(\n            parseInt(obj.likecounter), \n            parseInt(obj.lovecounter), \n            parseInt(obj.funcounter), \n            parseInt(obj.wowcounter), \n            parseInt(obj.sadcounter), \n            parseInt(obj.angrycounter), \n            parseInt(obj.reportcounter))\n    }\n\n    validate(obj: any) {\n        return MessageSocialInfo.validate(obj)\n    }\n\n    static validate(obj: any) {\n        return\n    }\n\n    static getPropertyType(propertyName: string): string {\n        switch(propertyName.toLowerCase()) {\n            case 'likecounter': return 'int'\n            case 'lovecounter': return 'int'\n            case 'funcounter': return 'int'\n            case 'wowcounter': return 'int'\n            case 'sadcounter': return 'int'\n            case 'angrycounter': return 'int'\n            case 'reportcounter': return 'int'\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/common/MessageSocialInfo.ts","const root = require('app-root-path').path;\n\nmodule.exports = {\n    entry: `${root}/src/start.ts`,\n    target: 'node',\n    externals: [\n        /^[a-z\\-0-9]+$/ // Ignore node_modules folder\n    ],\n    output: {\n        filename: 'app.js',\n        path: `${root}/build`,\n        libraryTarget: \"commonjs\"\n    },\n    resolve: {\n        // Add in `.ts` and `.tsx` as a resolvable extension.\n        extensions: ['', '.webpack.js', '.web.js', '.ts', '.tsx', '.js'],\n    },\n    resolveLoader: {\n        root: [`${root}/node_modules`]\n    },\n    module: {\n        loaders: [{\n            // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`\n            test: /\\.tsx?$/,\n            exclude: 'node_modules',\n            loader: 'ts-loader'\n        }]\n    },\n    devtool: '#source-map'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./webpack.config.js\n// module id = 33\n// module chunks = 0","module.exports = require(\"app-root-path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"app-root-path\"\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}