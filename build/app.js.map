{"version":3,"sources":["webpack:///webpack/bootstrap 0a5a56bb94fac06e8090","webpack:///./src/start.ts","webpack:///./src/lib/application/Application.ts","webpack:///external \"express\"","webpack:///external \"morgan\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"http\"","webpack:///./src/lib/router/RouterFactory.ts","webpack:///./src/lib/constant/Method.ts","webpack:///./src/service/ProfileService.ts","webpack:///./src/resource/Profile.ts","webpack:///./src/lib/resource/Resource.ts","webpack:///./src/lib/error/ApplicationException.ts","webpack:///./src/lib/utils/utils.ts","webpack:///./src/resource/PersonalInfo.ts","webpack:///./src/lib/resource/EmbeddedResource.ts","webpack:///./src/lib/db/postgre/PostgreCriteria.ts","webpack:///./src/lib/resource/QueryTuple.ts","webpack:///./src/lib/mapper/MapperProvider.ts","webpack:///./src/lib/utils/utils.db.ts","webpack:///./src/lib/resource/QueryTupleOperation.ts","webpack:///./src/lib/db/postgre/utils.postgre.ts","webpack:///./src/lib/utils/utils.props.ts","webpack:///./config/config.local.ts","webpack:///./config/config.dev.ts","webpack:///./config/config.prod.ts","webpack:///external \"pg\"","webpack:///./src/resource/Message.ts","webpack:///./src/resource/MessageSocialInfo.ts","webpack:///./src/resource/mappers/Message.mapper.ts","webpack:///./src/resource/mappers/Profile.mapper.ts","webpack:///./src/lib/db/postgre/PostgreRepository.ts","webpack:///./src/lib/repository/Response.ts","webpack:///./src/lib/annotation/route.ts","webpack:///./src/lib/hal/HalHandler.ts","webpack:///./src/service/MessageService.ts","webpack:///./src/resource/mappers/Trending.mapper.ts","webpack:///./src/resource/mappers/MessageSocialInfo.mapper.ts","webpack:///./src/resource/mappers/PersonalInfo.mapper.ts","webpack:///./src/resource/Trending.ts","webpack:///./webpack.config.js","webpack:///external \"app-root-path\"","webpack:///./src/service/TrendingService.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0a5a56bb94fac06e8090","import Application from './lib/application/Application'\nimport ProfileService from './service/ProfileService'\nimport MessageService from './service/MessageService'\nimport TrendingService from './service/TrendingService'\nimport MapperProvider from './lib/mapper/MapperProvider'\n\nimport MessageMapper from './resource/mappers/Message.mapper'\nimport TrendingMapper from './resource/mappers/Trending.mapper'\nimport MessageSocialInfoMapper from './resource/mappers/MessageSocialInfo.mapper'\nimport PersonalInfoMapper from './resource/mappers/PersonalInfo.mapper'\nimport ProfileMapper from './resource/mappers/Profile.mapper'\n\nimport Message from './resource/Message'\nimport MessageSocialInfo from './resource/MessageSocialInfo'\nimport PersonalInfo from './resource/PersonalInfo'\nimport Profile from './resource/Profile'\nimport Trending from './resource/Trending'\n\nconst port = process.env.APP_PORT\nconst apiVersion = 2\nconst host = `http://localhost:3000/`\n\n\nMapperProvider.add(Message.name, MessageMapper)\nMapperProvider.add(Trending.name, TrendingMapper)\nMapperProvider.add(MessageSocialInfo.name, MessageSocialInfoMapper)\nMapperProvider.add(PersonalInfo.name, PersonalInfoMapper)\nMapperProvider.add(Profile.name, ProfileMapper)\n\n\nnew Application(\n    [new ProfileService(), new MessageService(), new TrendingService()],\n    port,\n    apiVersion,\n    host\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/start.ts","import * as express from 'express';\nimport * as path from 'path';\nimport * as logger from 'morgan';\nimport * as bodyParser from 'body-parser';\nimport * as root from 'app-root-path';\nimport * as cookieParser from 'cookie-parser';\nimport * as http from 'http';\nimport RouterFactory from '../router/RouterFactory'\nimport Repository from '../repository/Repository'\nimport Resource from '../resource/Resource'\nvar _services = {}\nconst app = express()\n\n/**\n * Application Bootstrap class in charge of creating the http server\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class Application {\n\n    /**\n     * Default Application Port to be used in case specific value is not provided\n     */\n    public static DEFAULT_PORT = 3000\n\n    /**\n     * Default page number to be used in case specific page value is not provided\n     */\n    public static DEFAULT_PAGE = 1\n\n    /**\n     * Default page size number to be used in case specific page size value is not provided\n     */\n    public static DEFAULT_PAGE_SIZE = 50\n\n    /**\n     * API Version. Prefixed the application routes\n     */\n    public static API_VERSION\n\n    /**\n     * API Host. Used to construct URL strings on resource representations\n     */\n    public static HOST\n\n    /**\n     * List of services hosted by server\n     */\n    services: any[]\n\n    /**\n     * \n     */\n    constructor(services: any[], port?: number, version?: number, host?: string) {\n        version ? Application.API_VERSION = version : 'v1'\n        host ? Application.HOST = host : ''\n\n        //TODO This middlewares would be optional / configurable\n        app.use(logger('dev'));\n        app.use(bodyParser.json());\n        app.use(bodyParser.urlencoded({ extended: false }));\n        app.use(cookieParser());\n        //TODO This middlewares would be optional / configurable\n\n        app.use(this.injectPaginationParams)\n\n        app.use(`/v${version}`, RouterFactory.getRouter());\n        app.set('port', port || Application.DEFAULT_PORT);\n\n        const server = http.createServer(app);\n        server.listen(port || Application.DEFAULT_PORT);\n\n        server.on('listening', () => {\n            const addr = server.address();\n            const bind = (typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`);\n        });\n\n        services.forEach((service) => {\n            _services[service.getName()] = service\n        })\n    }\n\n    injectPaginationParams(req, res, next) {\n        !req.query['page_size'] ? req.query['page_size'] = Application.DEFAULT_PAGE_SIZE : ''\n        !req.query['page'] ? req.query['page'] = Application.DEFAULT_PAGE : ''\n        return next()\n    }\n\n    public static getServiceByName(name: string) {\n        return _services[name]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/application/Application.ts","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 7\n// module chunks = 0","import * as express from 'express'\nimport Method from '../constant/Method'\nconst router = express.Router()\n\n/**\n * Router Factory is responsible to create routes for resource services\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class RouterFactory {\n\n    /**\n     * Creates a route for the given HTTP method + url(s) combination\n     * @param method HTTP method\n     * @param urls list of (or single) url(s) where route will be binded\n     * @handler Function that will handle the route execution\n     */\n    public static create(method: Method, urls: string[] | string, handler: any) {\n        switch (method) {\n            case Method.GET:\n                router.get(urls, handler);\n                break;\n            case Method.POST:\n                router.post(urls, handler);\n                break\n            case Method.PUT:\n                router.put(urls, handler);\n                break\n            case Method.DELETE:\n                router.delete(urls, handler);\n                break\n        }\n    }\n\n    /**\n     * Returns an instance of an express router object\n     */\n    public static getRouter(): express.Router {\n        return router;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/router/RouterFactory.ts","/**\n * List of HTTP methods\n */\nexport enum Method {\n    GET,\n    PUT,\n    POST,\n    DELETE,\n    OPTIONS,\n    PATCH\n}\n\nexport default Method\n\n\n// WEBPACK FOOTER //\n// ./src/lib/constant/Method.ts","import Profile from '../resource/Profile'\nimport PostgreRepository from '../lib/db/postgre/PostgreRepository'\nimport Method from '../lib/constant/Method'\nimport route from '../lib/annotation/route'\nimport HalHandler from '../lib/hal/HalHandler'\nvar __this;\n\nexport default class ProfileService extends PostgreRepository<Profile> {\n\n    constructor() {\n        super(Profile.RESOURCE_NAME);\n        __this = this;\n    }\n\n    getResource() {\n        return Profile\n    }\n\n    @route(Method.GET, ['/profile/:id', '/profile'])\n    async getProfile(req, res, next) {\n        HalHandler.process(__this, req, res, Profile)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/ProfileService.ts","import Resource from '../lib/resource/Resource'\nimport PersonalInfo from './PersonalInfo'\nimport ApplicationException from '../lib/error/ApplicationException'\nimport EmbeddedResource from '../lib/resource/EmbeddedResource'\nimport PostgreCriteria from '../lib/db/postgre/PostgreCriteria'\nimport QueryTuple from '../lib/resource/QueryTuple'\nimport QueryTupleOperation from '../lib/resource/QueryTupleOperation'\nimport Message from './Message'\nconst mapper = require('./mappers/Profile.mapper')\n\n/**\n * Profile Resource definition\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class Profile extends Resource<Profile> {\n\n    /**\n     * @type {string} the name of the resource\n     */\n    public static RESOURCE_NAME: string = 'profile';\n\n\n    private personalInfo: PersonalInfo;\n\n    /**\n     * constructor\n     * @param personalInfo personal information of the profile\n     * @param id the id of the resource\n     */\n    constructor(personalInfo: PersonalInfo, id?: string) {\n        super(Profile.RESOURCE_NAME, id);\n        this.validate({ personalInfo, id });\n        this.personalInfo = personalInfo;\n    }\n\n    /**\n     * Attempts to create a Profile object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of Profile class\n     * @returns {Profile} instance of Profile class\n     */\n    create(obj: any): Profile {\n        return Profile.create(obj)\n    }\n\n    /**\n     * Attempts to create a Profile object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of Profile class\n     * @returns {Profile} instance of Profile class\n     */\n    static create(obj: any): Profile {\n        return new Profile(PersonalInfo.create(obj), obj.id)\n    }\n\n    /**\n     * Validates whether or not supplied object contains valid parameters to construct a Profile instance\n     * @param obj object to be validated\n     */\n    validate(obj: any) {\n        try {\n            PersonalInfo.validate(obj.personalInfo)\n        } catch (err) {\n            throw new ApplicationException(`Error creating Profile instance: Provided input: ${obj}`, err)\n        }\n    }\n\n    /**\n     * Defines the list of embedded resources of the Profile resource\n     * @returns {EmbeddedResource[]} list of EmbeddedResource\n     */\n    embeddeds(): EmbeddedResource[] {\n        return [\n            new EmbeddedResource(\n                'message',\n                Message.RESOURCE_NAME,\n                new PostgreCriteria([new QueryTuple('profileId', this.getId(), 'bigint', QueryTupleOperation.EQUALS)]))\n        ]\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/Profile.ts","import ApplicationException from '../error/ApplicationException'\nimport EmbeddedResource from './EmbeddedResource'\nimport Factory from '../common/Factory'\nimport Application from '../application/Application'\nimport { removeDuplicatedSlashes } from '../utils/utils'\n\n/**\n * Abstract class required to be fully implemented by final resource classes. It provides a more strict resource\n * contract as well as common functionality required by any resource, in example, to fully generate a HAL representation\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nabstract class Resource<T> implements Factory<T>{\n\n    /**\n     * The id of the resource. Resource hierarchy enforces that every resource must have an id field\n     */\n    private id: string\n\n    /**\n     * the name of the resource\n     */\n    private name: string\n\n    /**\n     * constructor\n     * @param name the name of the resource\n     * @param id the id of the resource\n     */\n    constructor(name: string, id?: string) {\n        this.id = id;\n        this.name = name;\n    }\n\n    /**\n     * @returns {string} the name of the resource\n     */\n    getName() {\n        return this.name;\n    }\n\n    /**\n     * @returns {string} the id of the resource\n     */\n    getId() {\n        return this.id;\n    }\n\n    /**\n     * Creates a HAL representation of a resource. Hal representations often require other database calls to fulfill\n     * the representation (Particularly to execute queries for embedded resources)\n     *\n     * @param isRoot VERY IMPORTANT! This field denotes if the resource asking for the HAL representation is the original\n     * one. This is important since we dont want to further expand HAL representation on embedded resources. This is\n     * particularly import since it avoid circular dependency hell. In example:\n     * Profile resource embeds a message collection of Message resources. Also, Message resource embeds a Profile\n     * resource. If isRoot is not properly used, Message and Profile will enter on a circular dependency resolution\n     * issue. Setting isRoot to true, embedded resources are not HAL representations (though, no _links and\n     * no _embedded sections).\n     *\n     * @returns {{}} a Hal representation of the caller resource\n     */\n    async toHal(isRoot?: boolean) {\n        let __this = this;\n        let hal = {}\n        if (!__this.id) {\n            throw new ApplicationException(`A resource must contain an ID to be represented`);\n        }\n\n        Object.keys(__this).forEach((key) => {\n            hal[key] = __this[key]\n        });\n\n        hal['_links'] = {}\n        hal['_embedded'] = {}\n\n        hal['_links'] = {\n            self: removeDuplicatedSlashes(`${Application.HOST}/v${Application.API_VERSION}/${__this.getName()}/${__this.getId()}`)\n        };\n\n        if (isRoot) {\n            for (var i = 0; i < __this.embeddeds().length; i++) {\n                let embeddedResource = __this.embeddeds()[i]\n                let service = Application.getServiceByName(embeddedResource.getResourceName())\n                let response = await service.search(embeddedResource.getCriteria(), service.getResource())\n                hal['_embedded'][embeddedResource.getName()] = response.getResources()\n            }\n        }\n\n        return hal\n    }\n\n    abstract create(obj: any): T\n\n    abstract validate(obj: any)\n\n    abstract embeddeds(): EmbeddedResource[]\n\n}\n\nexport default Resource\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/Resource.ts","/**\n * Application Exception\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class ApplicationException {\n    date: string;\n    description: string;\n    stack: string;\n\n    /**\n     * constructor\n     * @param description a description of the exception event\n     * @param stack an optional stack trace to be attached to generated HAL error representation\n     */\n    constructor(description: string, stack?: string) {\n        this.date = new Date().toISOString();\n        this.description = description;\n        this.stack = stack;\n    }\n\n    /**\n     * Returns a HAL representation of the exception\n     * @returns {{date: string, description: string, stack: string, _links: {}, _embedded: {}}}\n     */\n    toHal() {\n        return {\n            date: this.date,\n            description: this.description,\n            stack: `${this.stack ? this.stack : 'N/A'}`,\n            _links: {},\n            _embedded: {}\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/error/ApplicationException.ts","/**\n * Given an url as an string, removes duplicated slashes from it. \n * Example:\n * http://www.google.com// -> http://www.google.com/\n * @param url url to which duplicated slashes will be removed from\n */\nexport function removeDuplicatedSlashes(url: string) {\n    return url.replace(/([^:]\\/)\\/+/g, \"$1\");\n}\n\n/**\n * Injects named parameters as query params\n * @param req HTTP request\n * \n * //TODO this is not ideal. I need to somehow implement a decorator that executes\n * //TODO each and every time before a @route annotated method.\n */\nexport function injectIdParams(req) {\n    Object.keys(req.params).forEach((paramName) => {\n        if (req.params[paramName]) req.query[paramName] = req.params[paramName]\n    })\n}\n\nexport function toQueryString(req) {\n    let queryString = '?'\n    Object.keys(req.query).forEach((val) => {\n        queryString += `${val}=${req.query[val]}&`\n    })\n    queryString = queryString.slice(0, -1)\n    return removeDuplicatedSlashes(queryString)\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.ts","import Factory from '../lib/common/Factory'\n\n/**\n * PersonalInfo Info object\n * //TODO This is not a resource indeed, it would be somewhere else to clearly state that\n */\nexport default class PersonalInfo implements Factory<PersonalInfo>{\n    \n    private name: string;\n    private lastName: string;\n    private email: string;\n    private age: number;\n    private bio: string;\n    private photo: string;\n\n    /**\n     * constructor\n     * @param name name of the person \n     * @param lastName last name of the person\n     * @param email email of the person\n     * @param age age of the person\n     * @param bio biography/description of the person\n     * @param photo photo of the person\n     */\n    constructor(name: string, lastName: string, email: string, age: number, bio: string, photo: string) {\n        this.validate({name, lastName, email, age, bio, photo});\n        this.name = name;\n        this.lastName = lastName;\n        this.email = email;\n        this.age = age;\n        this.bio = bio;\n        this.photo = photo;\n    }\n\n    /**\n     * Attempts to create a PersonalInfo object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of PersonalInfo class\n     * @returns {PersonalInfo} instance of PersonalInfo class\n     */\n    create(obj:any): PersonalInfo {\n        return PersonalInfo.create(obj)\n    }\n\n    /**\n     * Attempts to create a PersonalInfo object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of PersonalInfo class\n     * @returns {PersonalInfo} instance of PersonalInfo class\n     */\n    static create(obj: any): PersonalInfo {\n        return new PersonalInfo(obj.name, obj.lastName, obj.email, obj.age, obj.bio, obj.avatar)\n    }\n\n    /**\n     * Validates whether or not supplied object contains valid parameters to construct a Profile instance\n     * @param obj object to be validated\n     */\n    validate(obj:any) {\n        return PersonalInfo.validate(obj) \n    }\n\n    /**\n     * Validates whether or not supplied object contains valid parameters to construct a Profile instance\n     * @param obj object to be validated\n     */\n    static validate(obj:any) {\n        return\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/PersonalInfo.ts","import Criteria from '../criteria/Criteria'\n\n/**\n * An embedded resource is a resource linked to another resource. Its represented on _embedded key of a HAL resource\n * representation\n *\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class EmbeddedResource {\n\n    name: string\n    resourceName: string\n    criteria: Criteria\n\n    /**\n     * constructor\n     * @param name the name to be used as key on the _embedded section of the container resource\n     * @param resourceName the name of the resource that will contain it\n     * @param criteria the criteria object used to generate the corresponding query\n     */\n    constructor(name, resourceName, criteria) {\n        this.name = name\n        this.resourceName = resourceName\n        this.criteria = criteria\n    }\n\n    /**\n     * @returns {string} the name used as key on the _embedded section of the container resource\n     */\n    getName(): string {\n        return this.name\n    }\n\n    /**\n     * @returns {Criteria} the criteria to be used to generate the query\n     */\n    getCriteria(): Criteria {\n        return this.criteria\n    }\n\n    /**\n     * @returns {string} The name of the resource that will contain the embedded resource\n     */\n    getResourceName(): string {\n        return this.resourceName\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/EmbeddedResource.ts","import Criteria from '../../criteria/Criteria'\nimport QueryTuple from '../../resource/QueryTuple'\nimport MapperProvider from '../../mapper/MapperProvider'\nimport { resolveOperation } from '../../utils/utils.db'\nimport { resolveTupleOperation } from './utils.postgre'\n\n/**\n * Implementation of a Criteria for Postgre databases. A criteria is capable to resolve to a parametrized query through\n * QueryTuples.\n */\nexport default class PostgreCriteria implements Criteria {\n\n    tuples: QueryTuple[]\n\n    /**\n     * constructor\n     * @param tuples list of tuples used to create a criteria\n     */\n    constructor(tuples: QueryTuple[]) {\n        this.tuples = tuples\n    }\n\n    /**\n     * @returns {QueryTuple[]} list of tuples\n     */\n    getTuples(): QueryTuple[] {\n        return this.tuples\n    }\n\n    /**\n     * A criteria object can be resolved and thus return a parametrized Postgre database query\n     * @param tableName the name of the table where created query will be applied\n     * @returns {{statement: string, totalsStatement: string, values: Array}}\n     */\n    resolve(tableName: string): { statement: string, totalsStatement: string, values: any } {\n        let __this = this\n        let statement = `SELECT * FROM ${tableName}`\n        let totalsStatement = `SELECT COUNT(*) FROM ${tableName}`\n        let whereStatement = ``\n        let paginationStatement = ``\n        let page\n        let pageSize\n        let values = []\n        let fieldPosition = 0\n\n        __this.tuples.forEach((tuple, idx) => {\n            fieldPosition++\n            switch (tuple.fieldName) {\n                case 'page':\n                case 'page_size':\n                    if (tuple.fieldName === 'page_size') {\n                        pageSize = tuple.fieldValue\n                        paginationStatement += `LIMIT $${fieldPosition} `\n                        values.push(pageSize)\n                    }\n                    if (tuple.fieldName === 'page') {\n                        paginationStatement += `OFFSET $${fieldPosition} `\n                        values.push((tuple.fieldValue - 1) * pageSize)\n                    }\n                    break\n\n                default:\n                    values.push(tuple.fieldValue)\n                    whereStatement += `${tuple.fieldName}::${tuple.fieldType}${resolveTupleOperation(tuple.operation)}$${fieldPosition}`\n                    whereStatement += ` AND `\n                    break\n            }\n        })\n\n\n        whereStatement = whereStatement.substring(0, whereStatement.length - ` AND `.length)\n        whereStatement ? statement += ` WHERE ${whereStatement}` : ''\n        whereStatement ? totalsStatement += ` WHERE ${whereStatement}` : ''\n        paginationStatement ? statement += ` ${paginationStatement} ` : ''\n        paginationStatement ? totalsStatement += ` ${paginationStatement} ` : ''\n        statement = statement.toUpperCase()\n        totalsStatement = totalsStatement.toUpperCase()\n\n        return { statement, totalsStatement, values }\n    }\n\n    /**\n     * Creates a criteria instance using an HTTP request object, and a resource instance\n     * @param request the HTTP request object from which data will be extracted to create criteria tuples\n     * @param resource the resource used to resolve its corresponding mapper\n     * @returns {PostgreCriteria} A postgre database criteria object\n     */\n    create(request: any, resource: any) {\n        return PostgreCriteria.create(request, resource)\n    }\n\n    /**\n     * Creates a criteria instance using an HTTP request object, and a resource instance\n     * @param request the HTTP request object from which data will be extracted to create criteria tuples\n     * @param resource the resource used to resolve its corresponding mapper\n     * @returns {PostgreCriteria} A postgre database criteria object\n     */\n    static create(request: any, resource) {\n        let tuples = []\n\n        Object.keys(request.query).forEach((key) => {\n            let mapping = MapperProvider.get(resource.name, key)\n            let value = request.query[key]\n            tuples.push(new QueryTuple(mapping.name, value, mapping.type, resolveOperation(key)))\n        })\n\n        return new PostgreCriteria(tuples)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/PostgreCriteria.ts","import QueryTupleOperation from './QueryTupleOperation'\n\n/**\n * A QueryTuple represents an statement used to create a search query\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class QueryTuple {\n\n\n    fieldName: string\n    fieldValue: string | string[] | number | number[] | any\n    fieldType: string\n    operation: QueryTupleOperation\n\n    /**\n     * constructor\n     * @param fieldName the name of the field that needs to be queried\n     * @param fieldValue the value of the field that needs to be queried\n     * @param fieldType the type of the field\n     * @param operation the operation (check QueryTupleOperation class) hold on this QueryTuple\n     */\n    constructor(fieldName: string, fieldValue: string | string[] | number | number[] | any, fieldType: string, operation: QueryTupleOperation) {\n        this.fieldName = fieldName\n        this.fieldValue = fieldValue\n        this.fieldType = fieldType\n        this.operation = operation\n    }\n\n    /**\n     * @returns {string} the name of the field that needs to be queried\n     */\n    getFieldName(): string {\n        return this.fieldName\n    }\n\n    /**\n     * @returns {string|string[]|number|number[]|any} the value of the field that needs to be queried\n     */\n    getFieldValue(): string | string[] | number | number[] | any {\n        return this.fieldValue\n    }\n\n    /**\n     * @returns {string} the type of the field\n     */\n    getFieldType(): string {\n        return this.fieldType\n    }\n\n    /**\n     * @returns {QueryTupleOperation} the operation (check QueryTupleOperation class) hold on this QueryTuple\n     */\n    getOperation(): QueryTupleOperation {\n        return this.operation\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/QueryTuple.ts","var mappers = {}\n\n/**\n * Class responsible of handling resource property mapper. A Mapper is a <RESOURCE_NAME>.mapper.ts file that\n * contains information regarding the type of the field in the database (ie: if its varchar or bigint) and \n * the name to which maps to (typically, the column name on a relational database). Other database specific \n * fields would be added here in the future\n * \n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class MapperProvider {\n    /**\n     * @param resourceName the name of the resource. For this value would be use <RESOURCE>.RESOURCE_NAME\n     * @param mapper the <RESOURCE>.mapper.ts json file that contains the type and name information  \n     */\n    static add(resourceName, mapper) {\n        mappers[resourceName] = mapper\n    }\n\n    /**\n     * Given a field name -that it can be a dot separated one- resolves the mapper entry corresponding to it.\n     * A mapper entry is a json value of type {type:<STRING>, name:<STRING>}\n     * @param resourceName the name of the resource\n     * @param fieldName the field name. It can be dot separated one, in example: personalInfo.name\n     */\n    static get(resourceName, fieldName) {\n        let targetResource\n        let mapper = mappers[resourceName]\n\n        if (MapperProvider.isReservedFieldName(fieldName)) {\n            return { type: '', name: fieldName }\n        }\n\n        //If fieldName contains ., that means its the property of a resource. It could be N number of sub\n        //resources (in example, if the fieldName is 'personalInfo.bankInformation.id' we need to recursively\n        //resolve id field of bankInformation mapper, referred by personalInfo mapper)  \n        if (fieldName.indexOf('.') !== -1) {\n            let separatorIndex = fieldName.indexOf('.')\n            let subResourceName = fieldName.substring(0, separatorIndex - 1)\n            let subFieldName = fieldName.substring(separatorIndex + 1, fieldName.length)\n\n            return MapperProvider.get(subResourceName, subFieldName)\n        }\n\n        if (mapper.refers) {\n            return MapperProvider.get(mapper.refers, fieldName)\n        } else {\n            return mapper[fieldName]\n        }\n    }\n\n    /**\n     * Checks whether or not the field name is a reserved one. A reserved word does not require a map entry,\n     * since typing information is not required to create the query\n     * @param fieldName The field name\n     */\n    static isReservedFieldName(fieldName) {\n        return fieldName === 'page' || fieldName === 'page_size'\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/mapper/MapperProvider.ts","import QueryTupleOperation from '../resource/QueryTupleOperation'\n\n/**\n * Given an object key, extract the corresponding operation identifier.\n * In example, the key is eq_<KEY_NAME>, it extracts the identifier (_eq) and returns the corresponding operation\n * @param key the key from which the operation identifier will be analysed\n * @returns {QueryTupleOperation} A QueryTupleOperation (in example, EQUALS)\n */\nexport function resolveOperation(key) {\n  let _containsPrefix = (key) => {\n    return !key || key[2] != '_' || key.length < 3\n  }\n\n  if (!_containsPrefix(key)) return QueryTupleOperation.EQUALS\n\n  let opPrefix = key.substring(0, 3).toLowerCase()\n\n  switch (opPrefix) {\n    case 'eq': return QueryTupleOperation.EQUALS\n    case 'gt': return QueryTupleOperation.GREATER_THAN\n    case 'lt': return QueryTupleOperation.LESSER_THAN\n    case 'ct': return QueryTupleOperation.CONTAINS\n    default: return QueryTupleOperation.EQUALS\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.db.ts","/**\n * List of QueryTuple operations. Used to determine the type of requested query\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport enum QueryTupleOperation {\n    EQUALS,\n    GREATER_THAN,\n    LESSER_THAN,\n    CONTAINS\n}\n\nexport default QueryTupleOperation\n\n\n// WEBPACK FOOTER //\n// ./src/lib/resource/QueryTupleOperation.ts","import QueryTupleOperation from '../../resource/QueryTupleOperation'\n\nconst props = require('../../utils/utils.props');\nconst pg = require('pg')\nconst pool = new pg.Pool(props().postgresql);\n\n/**\n * Given a QueryTupleOperation, resolves to the corresponding Postgres operator\n * @param op QueryTupleOperation\n * @returns {any} the corresponding operator to be used on query\n */\nexport function resolveTupleOperation(op: QueryTupleOperation) {\n  switch (op) {\n    //TODO Do the resolution for contains! :)\n    case QueryTupleOperation.CONTAINS: return ''\n    case QueryTupleOperation.EQUALS: return '='\n    case QueryTupleOperation.GREATER_THAN: return '>'\n    case QueryTupleOperation.LESSER_THAN: return '<'\n  }\n}\n\npool.on('error', (err, client) => {\n  console.error('idle client error', err.message, err.stack);\n});\n\nmodule.exports.query = (text, values, callback) => {\n  return pool.query(text, values, callback);\n};\n\nmodule.exports.connect = (callback) => {\n  return pool.connect(callback);\n};\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/utils.postgre.ts","const local = require('../../../config/config.local');\nconst dev = require('../../../config/config.dev');\nconst prod = require('../../../config/config.prod');\n\n/**\n * Utility function used to load the corresponding configuration file\n * @returns {TypeNode|Type|boolean}\n */\nfunction properties() {\n    switch (process.env.APP_ENV) {\n        case 'local': return local.default;\n        case 'dev'  : return dev.default;\n        case 'prod' : return prod.default;\n        default     : return local.default;\n    }\n}\n\nexport = properties\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/utils.props.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./config/config.local.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./config/config.dev.ts","export default {\n    \"postgresql\": {\n        \"user\": \"juan\",\n        \"database\": \"autokal\",\n        \"password\": \"travel\",\n        \"host\": \"localhost\",\n        \"port\": 5432,\n        \"max\": 10,\n        \"idleTimeoutMillis\": 30000\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./config/config.prod.ts","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 27\n// module chunks = 0","import Resource from '../lib/resource/Resource'\nimport EmbeddedResource from '../lib/resource/EmbeddedResource'\nimport PostgreCriteria from '../lib/db/postgre/PostgreCriteria'\nimport MessageSocialInfo from './MessageSocialInfo'\nimport QueryTuple from '../lib/resource/QueryTuple'\nimport QueryTupleOperation from '../lib/resource/QueryTupleOperation'\nimport Profile from './Profile'\nconst mapper = require('./mappers/Message.mapper')\n\n/**\n * Message Resource definition\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class Message extends Resource<Message> {\n\n    /**\n     * The name of the resource. This field is particularly important to link the corresponding resource mapper\n     */\n    public static RESOURCE_NAME: string = 'message';\n\n    private value: string;\n    private date: number;\n    private profileId: number;\n    private messageSocialInfo: MessageSocialInfo;\n\n    /**\n     * constructor\n     * @param value \n     * @param date \n     * @param messageSocialInfo\n     * @param profileId\n     * @param id \n     */\n    constructor(value: string, date: number, messageSocialInfo: MessageSocialInfo, profileId: number, id?: string) {\n        super(Message.RESOURCE_NAME, id)\n        this.validate({ value, date, messageSocialInfo, profileId, id })\n        this.value = value\n        this.date = date\n        this.messageSocialInfo = messageSocialInfo\n        this.profileId = profileId\n    }\n\n    /**\n     * Define the list of embedded resources of the resource\n     */\n    embeddeds(): EmbeddedResource[] {\n        return [\n            new EmbeddedResource(\n                'profile',\n                Profile.RESOURCE_NAME,\n                new PostgreCriteria([new QueryTuple('id', this.profileId, 'bigint', QueryTupleOperation.EQUALS)]))\n        ]\n    }\n\n    /**\n     * Given an object, attempts to construct a Message instance\n     * @params obj Plain Javascript Object from which this factory method will try to construct an instance of a Message\n     */\n    create(obj: any): Message {\n        return Message.create(obj)\n    }\n\n    /**\n     * Given an object, attempts to construct a Message instance\n     * @params obj Plain Javascript Object from which this factory method will try to construct an instance of a Message\n     */\n    static create(obj: any): Message {\n        return new Message(obj.value, obj.date, MessageSocialInfo.create(obj), obj.profileid, obj.id)\n    }\n    \n    /**\n     * Given an object, validates that the supplied parameters are valid to construct an instance\n     * @params obj Plain Javascript Object Message object\n     */\n    validate(obj: any) {\n        return Message.validate(obj)\n    }\n\n    /**\n     * Given an object, validates that the supplied parameters are valid to construct an instance\n     * @params obj Plain Javascript Object Message object\n     */\n    static validate(obj: any) {\n        return\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/Message.ts","import Factory from '../lib/common/Factory'\n\n/**\n * MessageSocialInfo object\n * //TODO This is not a resource indeed, it would be somewhere else to clearly state that\n */\nexport default class MessageSocialInfo implements Factory<MessageSocialInfo> {\n\n    private likeCounter: number;\n    private loveCounter: number;\n    private funCounter: number;\n    private wowCounter: number;\n    private sadCounter: number;\n    private angryCounter: number;\n    private reportCounter: number;\n\n\n    /**\n     * constructor\n     * @param likeCounter # of times message has been marked as like\n     * @param loveCounter # of times message has been marked as love\n     * @param funCounter # of times message has been marked as fun\n     * @param wowCounter # of times message has been marked as wow\n     * @param sadCounter # of times message has been marked as sad\n     * @param angryCounter # of times message has been marked as angry\n     * @param reportCounter # of times message has been reported\n     */\n    constructor(likeCounter: number, loveCounter: number, funCounter: number, wowCounter: number, sadCounter: number, angryCounter: number, reportCounter: number) {\n        this.validate({ likeCounter, loveCounter, funCounter, wowCounter, sadCounter, angryCounter, reportCounter })\n        this.likeCounter = likeCounter;\n        this.loveCounter = loveCounter;\n        this.funCounter = funCounter;\n        this.wowCounter = wowCounter;\n        this.sadCounter = sadCounter;\n        this.angryCounter = angryCounter;\n        this.reportCounter = reportCounter;\n    }\n\n    /**\n     * Attempts to create a MessageSocialInfo object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of MessageSocialInfo class\n     * @returns {MessageSocialInfo} instance of MessageSocialInfo class\n     */\n    create(obj: any): MessageSocialInfo {\n        return MessageSocialInfo.create(obj)\n    }\n\n    /**\n     * Attempts to create a MessageSocialInfo object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of MessageSocialInfo class\n     * @returns {MessageSocialInfo} instance of MessageSocialInfo class\n     */\n    static create(obj: any): MessageSocialInfo {\n        return new MessageSocialInfo(\n            parseInt(obj.likecounter), \n            parseInt(obj.lovecounter), \n            parseInt(obj.funcounter), \n            parseInt(obj.wowcounter), \n            parseInt(obj.sadcounter), \n            parseInt(obj.angrycounter), \n            parseInt(obj.reportcounter))\n    }\n\n    validate(obj: any) {\n        return MessageSocialInfo.validate(obj)\n    }\n\n    static validate(obj: any) {\n        return\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/MessageSocialInfo.ts","export default {\n    \"id\": {\n        \"type\": \"bigint\",\n        \"name\": \"id\"\n    },\n    \"value\": {\n        \"type\": \"text\",\n        \"name\": \"value\"\n    },\n    \"date\": {\n        \"type\": \"bigint\",\n        \"name\": \"date\"\n    },\n    \"profileId\": {\n        \"type\": \"bigint\",\n        \"name\": \"profileId\"\n    },\n    \"messageSocialInfo\": {\n        \"refers\": \"MessageSocialInfo\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/mappers/Message.mapper.ts","export default {\n    \"id\": {\n        \"type\": \"bigint\",\n        \"name\": \"id\"\n    },\n    \"personalInfo\": {\n        \"refers\": \"PersonalInfo\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/mappers/Profile.mapper.ts","import Resource from '../../resource/Resource'\nimport PostgreCriteria from './PostgreCriteria'\nimport Repository from '../../repository/Repository'\nimport Response from '../../repository/Response'\nimport ApplicationException from '../../error/ApplicationException'\nconst pool = require('./utils.postgre')\n\n/**\n * PostgreSql Repository. Used to provide resource services with operations to interact with a Postgre database\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nabstract class PostgreRepository<T extends Resource<T>> implements Repository<T> {\n\n    name: string;\n\n    /**\n     * constructor\n     * @param name the name of the resource\n     */\n    constructor(name) {\n        this.name = name\n    }\n\n    /**\n     * @returns {string} the name of the resource\n     */\n    getName(): string {\n        return this.name\n    }\n\n    /**\n     * Given an HTTP request and a resource, returns the response to a given query (resolved using a proper criteria)\n     * @param request the HTTP request used to create the criteria that will be used to generate the query to be executed\n     * @param resource the resource\n     * @returns {T[]} A future list of T type resources obtained from repository through a criteria generate query\n     */\n    async searchByRequest(request: any, resource): Promise<Response<T[]>> {\n        let criteria = PostgreCriteria.create(request, resource)\n        let res = await this.search(criteria, resource)\n        return res\n    }\n\n    /**\n     * Given a criteria and a resource, executes a search query\n     * @param criteria criteria object used to generate the query to be executed\n     * @param resource the resource\n     * @returns {Array} list of future resources of type T obtained from repository through a criteria generated query\n     */\n    async search(criteria: PostgreCriteria, resource: T): Promise<Response<T[]>> {\n        let resolvedCriteria\n        resolvedCriteria = criteria.resolve(this.getName())\n        let res = await pool.query(resolvedCriteria.statement, resolvedCriteria.values)\n        let total = await pool.query(resolvedCriteria.totalsStatement, resolvedCriteria.values)\n        if (res.rows.length === 0) {\n            throw new ApplicationException(`Does not exist any ${this.getName()} that matches given criteria`)\n        } else {\n            let resources = []\n            res.rows.forEach((row) => {\n                resources.push(resource.create(row))\n            })\n            return new Response<T[]>(resources, parseInt(total.rows[0].count))\n        }\n    }\n\n    create(instance: T): T {\n        throw new Error('Method not implemented.');\n    }\n\n    update(id: string, updatedInstance: T): T {\n        throw new Error('Method not implemented.');\n    }\n\n    delete(id: string): T {\n        throw new Error('Method not implemented.');\n    }\n}\n\nexport default PostgreRepository\n\n\n// WEBPACK FOOTER //\n// ./src/lib/db/postgre/PostgreRepository.ts","import Resource from '../resource/Resource'\n\nexport default class Response<T> {\n\n    private resources: Resource<T>[]\n    private total: number \n\n    constructor(resources, total){\n        this.resources = resources\n        this.total = total\n    }\n\n    getResources(): Resource<T>[]{\n        return this.resources\n    }\n\n    getTotal(): any {\n        return this.total\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/repository/Response.ts","import RouterFactory from '../router/RouterFactory'\nimport Method from '../constant/Method'\n\n/**\n * Method level decorator responsible to attach routes to resource services.\n * @param verb the HTTP verb (GET, PUT, POST, etc...)\n * @param urls A list or a single url matching pattern. In example: /person/:id\n */\nexport default function route(verb:Method, urls:string[] | string) {\n    return function (target, propertyKey: string, descriptor: PropertyDescriptor) {\n        RouterFactory.create(verb, urls, target[propertyKey]);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/annotation/route.ts","import { injectIdParams, toQueryString, removeDuplicatedSlashes } from '../utils/utils'\nimport Application from '../application/Application'\n\nexport default class HalHandler {\n\n    /**\n     * Given a list of HAL resources, creates a HAL collection of them\n     * @param resources the list of the resources to be added to the \n     * @returns {{_embedded: {items: Array}, _links: {}}}\n     */\n    static async toHalCollection(resources, total, req) {\n        let halCollection = {\n            _embedded: {\n                items: []\n            },\n            _links: {\n                \"total_results\": total,\n                \"page_size\": parseInt(req.query['page_size']),\n                \"total_pages\": total / parseInt(req.query['page_size']) < 1 ? 1 : total / total / parseInt(req.query['page_size']),\n                \"current_page\": removeDuplicatedSlashes(`${Application.HOST}/v${Application.API_VERSION}/${req.path}${toQueryString(req)}`)\n            },\n        }\n        for (var i = 0; i < resources.length; i++) {\n            let r = await resources[i].toHal(true)\n            halCollection._embedded.items.push(r)\n        }\n\n        return halCollection\n    }\n\n    /**\n     * Given a resource service, an HTTP request, an HTTP response handler and a resource, processes it\n     * @param service the resource service\n     * @param req the HTTP request object\n     * @param res the HTTP response object\n     * @param resource a resource\n     */\n    static async process(service, req, res, resource) {\n        injectIdParams(req)\n        try {\n            let response = await service.searchByRequest(req, resource)\n            if (req.params.id) {\n                let r = await response.getResources()[0].toHal(true)\n                res.send(r)\n            } else {\n                let halCollection = await HalHandler.toHalCollection(response.getResources(), response.getTotal(), req)\n                res.send(halCollection)\n            }\n        } catch (err) {\n            res.send(err.toHal())\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/hal/HalHandler.ts","import Message from '../resource/Message'\nimport PostgreRepository from '../lib/db/postgre/PostgreRepository'\nimport Method from '../lib/constant/Method'\nimport route from '../lib/annotation/route'\nimport HalHandler from '../lib/hal/HalHandler'\nvar __this;\n\n/**\n * Service for Message resource\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class MessageService extends PostgreRepository<Message> {\n\n    /**\n     * constructor\n     */\n    constructor() {\n        super(Message.RESOURCE_NAME)\n        __this = this\n    }\n\n    /**\n     * @returns {Message} the resource to which this service is bind to\n     */\n    getResource() {\n        return Message\n    }\n\n    /**\n     * HTTP route\n     * @param req HTTP request\n     * @param res HTTP response\n     * @param next callback handler\n     */\n    @route(Method.GET, ['/profile/:profileId/message', '/profile/:profileId/message/:id'])\n    async searchForMessages(req, res, next) {\n        HalHandler.process(__this, req, res, Message)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/MessageService.ts","export default {\n    \"id\": {\n        \"type\": \"bigint\",\n        \"name\": \"id\"\n    },\n    \"image\": {\n        \"type\": \"text\",\n        \"name\": \"image\"\n    },\n    \"title\": {\n        \"type\": \"text\",\n        \"name\": \"title\"\n    },\n    \"location\": {\n        \"type\": \"text\",\n        \"name\": \"location\"\n    },\n    \"fans\": {\n        \"type\": \"bigint\",\n        \"name\": \"fans\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/mappers/Trending.mapper.ts","export default {\n    \"likeCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"likecounter\"\n    },\n    \"loveCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"lovecounter\"\n    },\n    \"funCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"funcounter\"\n    },\n    \"wowCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"wowcounter\"\n    },\n    \"sadCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"sancounter\"\n    },\n    \"angryCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"angrycounter\"\n    },\n    \"reportCounter\": {\n        \"type\": \"bigint\",\n        \"name\": \"reportcounter\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/mappers/MessageSocialInfo.mapper.ts","export default {\n    \"name\": {\n        \"type\": \"text\",\n        \"name\": \"name\"\n    },\n    \"lastName\": {\n        \"type\": \"text\",\n        \"name\": \"lastname\"\n    },\n    \"email\": {\n        \"type\": \"text\",\n        \"name\": \"email\"\n    },\n    \"age\": {\n        \"type\": \"bigint\",\n        \"name\": \"age\"\n    },\n    \"bio\": {\n        \"type\": \"text\",\n        \"name\": \"bio\"\n    },\n    \"photo\": {\n        \"type\": \"text\",\n        \"name\": \"photo\"\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/mappers/PersonalInfo.mapper.ts","import Resource from '../lib/resource/Resource'\nimport PersonalInfo from './PersonalInfo'\nimport ApplicationException from '../lib/error/ApplicationException'\nimport EmbeddedResource from '../lib/resource/EmbeddedResource'\nimport PostgreCriteria from '../lib/db/postgre/PostgreCriteria'\nimport QueryTuple from '../lib/resource/QueryTuple'\nimport QueryTupleOperation from '../lib/resource/QueryTupleOperation'\nconst mapper = require('./mappers/Trending.mapper')\n\n/**\n * Trending Resource definition\n * @author Juan Carlos Cancela <cancela.juancarlos@gmail.com>\n */\nexport default class Trending extends Resource<Trending> {\n\n    /**\n     * @type {string} the name of the resource\n     */\n    public static RESOURCE_NAME: string = 'trending';\n\n    private image: string\n    private title: string\n    private location: string\n    private fans: number\n\n    /**\n     * constructor\n     * @param image Image of the trending event\n     * @param title Title of the trending event\n     * @param location Location of the trending event\n     * @param fans Number of current fans on the trending event\n     * @param id the id of the resource\n     */\n    constructor(image: string, title: string, location: string, fans: number, id?: string) {\n        super(Trending.RESOURCE_NAME, id);\n        this.validate({ image, title, location, id });\n        this.image = image;\n        this.title = title;\n        this.location = location;\n        this.fans = fans;\n    }\n\n    /**\n     * Attempts to create a Trending object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of Trending class\n     * @returns {Trending} instance of Trending class\n     */\n    create(obj: any): Trending {\n        return Trending.create(obj)\n    }\n\n    /**\n     * Attempts to create a Trending object from given plain javascript object input\n     * @param obj the object from which it will be tried to be constructed an instance of Trending class\n     * @returns {Trending} instance of Trending class\n     */\n    static create(obj: any): Trending {\n        return new Trending(obj.image, obj.title, obj.location, parseInt(obj.fans), obj.id)\n    }\n\n    /**\n     * Validates whether or not supplied object contains valid parameters to construct a Trending instance\n     * @param obj object to be validated\n     */\n    validate(obj: any) {\n        return\n    }\n\n    /**\n     * Defines the list of embedded resources of the Trending resource\n     * @returns {EmbeddedResource[]} list of EmbeddedResource\n     */\n    embeddeds(): EmbeddedResource[] {\n        return []\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/resource/Trending.ts","const root = require('app-root-path').path;\n\nmodule.exports = {\n    entry: `${root}/src/start.ts`,\n    target: 'node',\n    externals: [\n        /^[a-z\\-0-9]+$/ // Ignore node_modules folder\n    ],\n    output: {\n        filename: 'app.js',\n        path: `${root}/build`,\n        libraryTarget: \"commonjs\"\n    },\n    resolve: {\n        // Add in `.ts` and `.tsx` as a resolvable extension.\n        extensions: ['', '.webpack.js', '.web.js', '.ts', '.tsx', '.js'],\n    },\n    resolveLoader: {\n        root: [`${root}/node_modules`]\n    },\n    module: {\n        loaders: [{\n            // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`\n            test: /\\.tsx?$/,\n            exclude: 'node_modules',\n            loader: 'ts-loader'\n        }]\n    },\n    devtool: '#source-map'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./webpack.config.js\n// module id = 41\n// module chunks = 0","module.exports = require(\"app-root-path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"app-root-path\"\n// module id = 42\n// module chunks = 0","import Trending from '../resource/Trending'\nimport PostgreRepository from '../lib/db/postgre/PostgreRepository'\nimport Method from '../lib/constant/Method'\nimport route from '../lib/annotation/route'\nimport HalHandler from '../lib/hal/HalHandler'\nvar __this;\n\nexport default class TrendingService extends PostgreRepository<Trending> {\n\n    constructor() {\n        super(Trending.RESOURCE_NAME);\n        __this = this;\n    }\n\n    getResource() {\n        return Trending\n    }\n\n    @route(Method.GET, ['/trending/:id', '/trending'])\n    async getTrendings(req, res, next) {\n        HalHandler.process(__this, req, res, Trending)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/service/TrendingService.ts"],"sourceRoot":""}